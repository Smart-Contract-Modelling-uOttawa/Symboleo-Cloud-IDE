/**
 * generated by Xtext 2.22.0
 */
package symboleoci.symboleoci.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import symboleoci.symboleoci.Contract;
import symboleoci.symboleoci.Declar;
import symboleoci.symboleoci.Obl;
import symboleoci.symboleoci.Param;
import symboleoci.symboleoci.Pow;
import symboleoci.symboleoci.Prop;
import symboleoci.symboleoci.SymboleociPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Contract</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link symboleoci.symboleoci.impl.ContractImpl#getName <em>Name</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.ContractImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.ContractImpl#getDeclarations <em>Declarations</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.ContractImpl#getPropositions <em>Propositions</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.ContractImpl#getObligations <em>Obligations</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.ContractImpl#getPowers <em>Powers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContractImpl extends MinimalEObjectImpl.Container implements Contract
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected EList<Param> parameters;

  /**
   * The cached value of the '{@link #getDeclarations() <em>Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclarations()
   * @generated
   * @ordered
   */
  protected EList<Declar> declarations;

  /**
   * The cached value of the '{@link #getPropositions() <em>Propositions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropositions()
   * @generated
   * @ordered
   */
  protected EList<Prop> propositions;

  /**
   * The cached value of the '{@link #getObligations() <em>Obligations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObligations()
   * @generated
   * @ordered
   */
  protected EList<Obl> obligations;

  /**
   * The cached value of the '{@link #getPowers() <em>Powers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPowers()
   * @generated
   * @ordered
   */
  protected EList<Pow> powers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContractImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SymboleociPackage.Literals.CONTRACT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleociPackage.CONTRACT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Param> getParameters()
  {
    if (parameters == null)
    {
      parameters = new EObjectContainmentEList<Param>(Param.class, this, SymboleociPackage.CONTRACT__PARAMETERS);
    }
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Declar> getDeclarations()
  {
    if (declarations == null)
    {
      declarations = new EObjectContainmentEList<Declar>(Declar.class, this, SymboleociPackage.CONTRACT__DECLARATIONS);
    }
    return declarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Prop> getPropositions()
  {
    if (propositions == null)
    {
      propositions = new EObjectContainmentEList<Prop>(Prop.class, this, SymboleociPackage.CONTRACT__PROPOSITIONS);
    }
    return propositions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Obl> getObligations()
  {
    if (obligations == null)
    {
      obligations = new EObjectContainmentEList<Obl>(Obl.class, this, SymboleociPackage.CONTRACT__OBLIGATIONS);
    }
    return obligations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Pow> getPowers()
  {
    if (powers == null)
    {
      powers = new EObjectContainmentEList<Pow>(Pow.class, this, SymboleociPackage.CONTRACT__POWERS);
    }
    return powers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SymboleociPackage.CONTRACT__PARAMETERS:
        return ((InternalEList<?>)getParameters()).basicRemove(otherEnd, msgs);
      case SymboleociPackage.CONTRACT__DECLARATIONS:
        return ((InternalEList<?>)getDeclarations()).basicRemove(otherEnd, msgs);
      case SymboleociPackage.CONTRACT__PROPOSITIONS:
        return ((InternalEList<?>)getPropositions()).basicRemove(otherEnd, msgs);
      case SymboleociPackage.CONTRACT__OBLIGATIONS:
        return ((InternalEList<?>)getObligations()).basicRemove(otherEnd, msgs);
      case SymboleociPackage.CONTRACT__POWERS:
        return ((InternalEList<?>)getPowers()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SymboleociPackage.CONTRACT__NAME:
        return getName();
      case SymboleociPackage.CONTRACT__PARAMETERS:
        return getParameters();
      case SymboleociPackage.CONTRACT__DECLARATIONS:
        return getDeclarations();
      case SymboleociPackage.CONTRACT__PROPOSITIONS:
        return getPropositions();
      case SymboleociPackage.CONTRACT__OBLIGATIONS:
        return getObligations();
      case SymboleociPackage.CONTRACT__POWERS:
        return getPowers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SymboleociPackage.CONTRACT__NAME:
        setName((String)newValue);
        return;
      case SymboleociPackage.CONTRACT__PARAMETERS:
        getParameters().clear();
        getParameters().addAll((Collection<? extends Param>)newValue);
        return;
      case SymboleociPackage.CONTRACT__DECLARATIONS:
        getDeclarations().clear();
        getDeclarations().addAll((Collection<? extends Declar>)newValue);
        return;
      case SymboleociPackage.CONTRACT__PROPOSITIONS:
        getPropositions().clear();
        getPropositions().addAll((Collection<? extends Prop>)newValue);
        return;
      case SymboleociPackage.CONTRACT__OBLIGATIONS:
        getObligations().clear();
        getObligations().addAll((Collection<? extends Obl>)newValue);
        return;
      case SymboleociPackage.CONTRACT__POWERS:
        getPowers().clear();
        getPowers().addAll((Collection<? extends Pow>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SymboleociPackage.CONTRACT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SymboleociPackage.CONTRACT__PARAMETERS:
        getParameters().clear();
        return;
      case SymboleociPackage.CONTRACT__DECLARATIONS:
        getDeclarations().clear();
        return;
      case SymboleociPackage.CONTRACT__PROPOSITIONS:
        getPropositions().clear();
        return;
      case SymboleociPackage.CONTRACT__OBLIGATIONS:
        getObligations().clear();
        return;
      case SymboleociPackage.CONTRACT__POWERS:
        getPowers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SymboleociPackage.CONTRACT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SymboleociPackage.CONTRACT__PARAMETERS:
        return parameters != null && !parameters.isEmpty();
      case SymboleociPackage.CONTRACT__DECLARATIONS:
        return declarations != null && !declarations.isEmpty();
      case SymboleociPackage.CONTRACT__PROPOSITIONS:
        return propositions != null && !propositions.isEmpty();
      case SymboleociPackage.CONTRACT__OBLIGATIONS:
        return obligations != null && !obligations.isEmpty();
      case SymboleociPackage.CONTRACT__POWERS:
        return powers != null && !powers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ContractImpl
