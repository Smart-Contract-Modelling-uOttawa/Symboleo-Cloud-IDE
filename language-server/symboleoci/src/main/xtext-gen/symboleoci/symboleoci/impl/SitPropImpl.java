/**
 * generated by Xtext 2.22.0
 */
package symboleoci.symboleoci.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import symboleoci.symboleoci.Interval;
import symboleoci.symboleoci.Name;
import symboleoci.symboleoci.SitProp;
import symboleoci.symboleoci.SymboleociPackage;
import symboleoci.symboleoci.cState;
import symboleoci.symboleoci.oState;
import symboleoci.symboleoci.pState;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sit Prop</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link symboleoci.symboleoci.impl.SitPropImpl#getSituationName <em>Situation Name</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.SitPropImpl#getIntervals <em>Intervals</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.SitPropImpl#getOSituationName <em>OSituation Name</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.SitPropImpl#getCSituationName <em>CSituation Name</em>}</li>
 *   <li>{@link symboleoci.symboleoci.impl.SitPropImpl#getPSituationName <em>PSituation Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SitPropImpl extends MinimalEObjectImpl.Container implements SitProp
{
  /**
   * The cached value of the '{@link #getSituationName() <em>Situation Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSituationName()
   * @generated
   * @ordered
   */
  protected Name situationName;

  /**
   * The cached value of the '{@link #getIntervals() <em>Intervals</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntervals()
   * @generated
   * @ordered
   */
  protected EList<Interval> intervals;

  /**
   * The cached value of the '{@link #getOSituationName() <em>OSituation Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOSituationName()
   * @generated
   * @ordered
   */
  protected oState oSituationName;

  /**
   * The cached value of the '{@link #getCSituationName() <em>CSituation Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCSituationName()
   * @generated
   * @ordered
   */
  protected cState cSituationName;

  /**
   * The cached value of the '{@link #getPSituationName() <em>PSituation Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPSituationName()
   * @generated
   * @ordered
   */
  protected pState pSituationName;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SitPropImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SymboleociPackage.Literals.SIT_PROP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Name getSituationName()
  {
    if (situationName != null && situationName.eIsProxy())
    {
      InternalEObject oldSituationName = (InternalEObject)situationName;
      situationName = (Name)eResolveProxy(oldSituationName);
      if (situationName != oldSituationName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SymboleociPackage.SIT_PROP__SITUATION_NAME, oldSituationName, situationName));
      }
    }
    return situationName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Name basicGetSituationName()
  {
    return situationName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSituationName(Name newSituationName)
  {
    Name oldSituationName = situationName;
    situationName = newSituationName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleociPackage.SIT_PROP__SITUATION_NAME, oldSituationName, situationName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Interval> getIntervals()
  {
    if (intervals == null)
    {
      intervals = new EObjectContainmentEList<Interval>(Interval.class, this, SymboleociPackage.SIT_PROP__INTERVALS);
    }
    return intervals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public oState getOSituationName()
  {
    return oSituationName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOSituationName(oState newOSituationName, NotificationChain msgs)
  {
    oState oldOSituationName = oSituationName;
    oSituationName = newOSituationName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymboleociPackage.SIT_PROP__OSITUATION_NAME, oldOSituationName, newOSituationName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOSituationName(oState newOSituationName)
  {
    if (newOSituationName != oSituationName)
    {
      NotificationChain msgs = null;
      if (oSituationName != null)
        msgs = ((InternalEObject)oSituationName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymboleociPackage.SIT_PROP__OSITUATION_NAME, null, msgs);
      if (newOSituationName != null)
        msgs = ((InternalEObject)newOSituationName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymboleociPackage.SIT_PROP__OSITUATION_NAME, null, msgs);
      msgs = basicSetOSituationName(newOSituationName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleociPackage.SIT_PROP__OSITUATION_NAME, newOSituationName, newOSituationName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public cState getCSituationName()
  {
    return cSituationName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCSituationName(cState newCSituationName, NotificationChain msgs)
  {
    cState oldCSituationName = cSituationName;
    cSituationName = newCSituationName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymboleociPackage.SIT_PROP__CSITUATION_NAME, oldCSituationName, newCSituationName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCSituationName(cState newCSituationName)
  {
    if (newCSituationName != cSituationName)
    {
      NotificationChain msgs = null;
      if (cSituationName != null)
        msgs = ((InternalEObject)cSituationName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymboleociPackage.SIT_PROP__CSITUATION_NAME, null, msgs);
      if (newCSituationName != null)
        msgs = ((InternalEObject)newCSituationName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymboleociPackage.SIT_PROP__CSITUATION_NAME, null, msgs);
      msgs = basicSetCSituationName(newCSituationName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleociPackage.SIT_PROP__CSITUATION_NAME, newCSituationName, newCSituationName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public pState getPSituationName()
  {
    return pSituationName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPSituationName(pState newPSituationName, NotificationChain msgs)
  {
    pState oldPSituationName = pSituationName;
    pSituationName = newPSituationName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymboleociPackage.SIT_PROP__PSITUATION_NAME, oldPSituationName, newPSituationName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPSituationName(pState newPSituationName)
  {
    if (newPSituationName != pSituationName)
    {
      NotificationChain msgs = null;
      if (pSituationName != null)
        msgs = ((InternalEObject)pSituationName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymboleociPackage.SIT_PROP__PSITUATION_NAME, null, msgs);
      if (newPSituationName != null)
        msgs = ((InternalEObject)newPSituationName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymboleociPackage.SIT_PROP__PSITUATION_NAME, null, msgs);
      msgs = basicSetPSituationName(newPSituationName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleociPackage.SIT_PROP__PSITUATION_NAME, newPSituationName, newPSituationName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SymboleociPackage.SIT_PROP__INTERVALS:
        return ((InternalEList<?>)getIntervals()).basicRemove(otherEnd, msgs);
      case SymboleociPackage.SIT_PROP__OSITUATION_NAME:
        return basicSetOSituationName(null, msgs);
      case SymboleociPackage.SIT_PROP__CSITUATION_NAME:
        return basicSetCSituationName(null, msgs);
      case SymboleociPackage.SIT_PROP__PSITUATION_NAME:
        return basicSetPSituationName(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SymboleociPackage.SIT_PROP__SITUATION_NAME:
        if (resolve) return getSituationName();
        return basicGetSituationName();
      case SymboleociPackage.SIT_PROP__INTERVALS:
        return getIntervals();
      case SymboleociPackage.SIT_PROP__OSITUATION_NAME:
        return getOSituationName();
      case SymboleociPackage.SIT_PROP__CSITUATION_NAME:
        return getCSituationName();
      case SymboleociPackage.SIT_PROP__PSITUATION_NAME:
        return getPSituationName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SymboleociPackage.SIT_PROP__SITUATION_NAME:
        setSituationName((Name)newValue);
        return;
      case SymboleociPackage.SIT_PROP__INTERVALS:
        getIntervals().clear();
        getIntervals().addAll((Collection<? extends Interval>)newValue);
        return;
      case SymboleociPackage.SIT_PROP__OSITUATION_NAME:
        setOSituationName((oState)newValue);
        return;
      case SymboleociPackage.SIT_PROP__CSITUATION_NAME:
        setCSituationName((cState)newValue);
        return;
      case SymboleociPackage.SIT_PROP__PSITUATION_NAME:
        setPSituationName((pState)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SymboleociPackage.SIT_PROP__SITUATION_NAME:
        setSituationName((Name)null);
        return;
      case SymboleociPackage.SIT_PROP__INTERVALS:
        getIntervals().clear();
        return;
      case SymboleociPackage.SIT_PROP__OSITUATION_NAME:
        setOSituationName((oState)null);
        return;
      case SymboleociPackage.SIT_PROP__CSITUATION_NAME:
        setCSituationName((cState)null);
        return;
      case SymboleociPackage.SIT_PROP__PSITUATION_NAME:
        setPSituationName((pState)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SymboleociPackage.SIT_PROP__SITUATION_NAME:
        return situationName != null;
      case SymboleociPackage.SIT_PROP__INTERVALS:
        return intervals != null && !intervals.isEmpty();
      case SymboleociPackage.SIT_PROP__OSITUATION_NAME:
        return oSituationName != null;
      case SymboleociPackage.SIT_PROP__CSITUATION_NAME:
        return cSituationName != null;
      case SymboleociPackage.SIT_PROP__PSITUATION_NAME:
        return pSituationName != null;
    }
    return super.eIsSet(featureID);
  }

} //SitPropImpl
