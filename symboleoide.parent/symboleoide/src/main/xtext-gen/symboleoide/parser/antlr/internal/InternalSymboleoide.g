/*
 * generated by Xtext 2.22.0
 */
grammar InternalSymboleoide;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package symboleoide.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package symboleoide.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import symboleoide.services.SymboleoideGrammarAccess;

}

@parser::members {

 	private SymboleoideGrammarAccess grammarAccess;

    public InternalSymboleoideParser(TokenStream input, SymboleoideGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ContractSpec";
   	}

   	@Override
   	protected SymboleoideGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleContractSpec
entryRuleContractSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContractSpecRule()); }
	iv_ruleContractSpec=ruleContractSpec
	{ $current=$iv_ruleContractSpec.current; }
	EOF;

// Rule ContractSpec
ruleContractSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getContractSpecAccess().getDomainSpecsDomainSpecParserRuleCall_0_0());
				}
				lv_domainSpecs_0_0=ruleDomainSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractSpecRule());
					}
					add(
						$current,
						"domainSpecs",
						lv_domainSpecs_0_0,
						"symboleoide.Symboleoide.DomainSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContractSpecAccess().getContractsContractParserRuleCall_1_0());
				}
				lv_contracts_1_0=ruleContract
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractSpecRule());
					}
					add(
						$current,
						"contracts",
						lv_contracts_1_0,
						"symboleoide.Symboleoide.Contract");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDomainSpec
entryRuleDomainSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainSpecRule()); }
	iv_ruleDomainSpec=ruleDomainSpec
	{ $current=$iv_ruleDomainSpec.current; }
	EOF;

// Rule DomainSpec
ruleDomainSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Domain'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainSpecAccess().getDomainKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDomainSpecAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainSpecRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDomainSpecAccess().getDConceptsDConceptParserRuleCall_2_0_0());
					}
					lv_dConcepts_2_0=ruleDConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDomainSpecRule());
						}
						add(
							$current,
							"dConcepts",
							lv_dConcepts_2_0,
							"symboleoide.Symboleoide.DConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getDomainSpecAccess().getSemicolonKeyword_2_1());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainSpecAccess().getCtypesCTypeParserRuleCall_3_0());
				}
				lv_ctypes_4_0=ruleCType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainSpecRule());
					}
					add(
						$current,
						"ctypes",
						lv_ctypes_4_0,
						"symboleoide.Symboleoide.CType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='endDomain'
		{
			newLeafNode(otherlv_5, grammarAccess.getDomainSpecAccess().getEndDomainKeyword_4());
		}
	)
;

// Entry rule entryRuleDConcept
entryRuleDConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDConceptRule()); }
	iv_ruleDConcept=ruleDConcept
	{ $current=$iv_ruleDConcept.current; }
	EOF;

// Rule DConcept
ruleDConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_ID
					{
						newLeafNode(lv_name_0_0, grammarAccess.getDConceptAccess().getNameIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDConceptRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_1='isA'
				{
					newLeafNode(otherlv_1, grammarAccess.getDConceptAccess().getIsAKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDConceptAccess().getConceptTypesCTypeParserRuleCall_0_1_1_0());
						}
						lv_conceptTypes_2_0=ruleCType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDConceptRule());
							}
							add(
								$current,
								"conceptTypes",
								lv_conceptTypes_2_0,
								"symboleoide.Symboleoide.CType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_3='with'
				{
					newLeafNode(otherlv_3, grammarAccess.getDConceptAccess().getWithKeyword_0_2());
				}
			)?
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDConceptAccess().getAttributesAttParserRuleCall_0_3_0_0());
						}
						lv_attributes_4_0=ruleAtt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDConceptRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_4_0,
								"symboleoide.Symboleoide.Att");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getDConceptAccess().getCommaKeyword_0_3_1());
				}
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getDConceptAccess().getAttributesAttParserRuleCall_0_4_0());
					}
					lv_attributes_6_0=ruleAtt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDConceptRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_6_0,
							"symboleoide.Symboleoide.Att");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getDConceptAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDConceptRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_8='isA'
			{
				newLeafNode(otherlv_8, grammarAccess.getDConceptAccess().getIsAKeyword_1_1());
			}
			otherlv_9='Enumeration'
			{
				newLeafNode(otherlv_9, grammarAccess.getDConceptAccess().getEnumerationKeyword_1_2());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getDConceptAccess().getLeftParenthesisKeyword_1_3());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDConceptAccess().getEnumerationItemsEnumItemParserRuleCall_1_4_0_0());
						}
						lv_enumerationItems_11_0=ruleenumItem
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDConceptRule());
							}
							add(
								$current,
								"enumerationItems",
								lv_enumerationItems_11_0,
								"symboleoide.Symboleoide.enumItem");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDConceptAccess().getCommaKeyword_1_4_1());
				}
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getDConceptAccess().getEnumerationItemsEnumItemParserRuleCall_1_5_0());
					}
					lv_enumerationItems_13_0=ruleenumItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDConceptRule());
						}
						add(
							$current,
							"enumerationItems",
							lv_enumerationItems_13_0,
							"symboleoide.Symboleoide.enumItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getDConceptAccess().getRightParenthesisKeyword_1_6());
			}
		)
	)
;

// Entry rule entryRuleenumItem
entryRuleenumItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumItemRule()); }
	iv_ruleenumItem=ruleenumItem
	{ $current=$iv_ruleenumItem.current; }
	EOF;

// Rule enumItem
ruleenumItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumItemAccess().getEnumItemAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumItemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumItemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCType
entryRuleCType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCTypeRule()); }
	iv_ruleCType=ruleCType
	{ $current=$iv_ruleCType.current; }
	EOF;

// Rule CType
ruleCType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCTypeAccess().getDomainTypeParserRuleCall_0());
		}
		this_DomainType_0=ruleDomainType
		{
			$current = $this_DomainType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCTypeAccess().getCTypeAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getCTypeAccess().getOntoCTypeParserRuleCall_1_1());
			}
			ruleOntoCType
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCTypeAccess().getCTypeAction_2_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getCTypeAccess().getBasicTypeParserRuleCall_2_1());
			}
			ruleBasicType
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDomainType
entryRuleDomainType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainTypeRule()); }
	iv_ruleDomainType=ruleDomainType
	{ $current=$iv_ruleDomainType.current; }
	EOF;

// Rule DomainType
ruleDomainType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDomainTypeRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getDomainTypeAccess().getDtypesDConceptCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleBasicType
entryRuleBasicType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	iv_ruleBasicType=ruleBasicType
	{ $current=$iv_ruleBasicType.current.getText(); }
	EOF;

// Rule BasicType
ruleBasicType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='NUMBER'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBasicTypeAccess().getNUMBERKeyword_0());
		}
		    |
		kw='STRING'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBasicTypeAccess().getSTRINGKeyword_1());
		}
		    |
		kw='DATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBasicTypeAccess().getDATEKeyword_2());
		}
	)
;

// Entry rule entryRuleOntoCType
entryRuleOntoCType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOntoCTypeRule()); }
	iv_ruleOntoCType=ruleOntoCType
	{ $current=$iv_ruleOntoCType.current.getText(); }
	EOF;

// Rule OntoCType
ruleOntoCType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='ASSET'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOntoCTypeAccess().getASSETKeyword_0());
		}
		    |
		kw='EVENT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOntoCTypeAccess().getEVENTKeyword_1());
		}
		    |
		kw='ROLE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOntoCTypeAccess().getROLEKeyword_2());
		}
		    |
		kw='SITUATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOntoCTypeAccess().getSITUATIONKeyword_3());
		}
		    |
		kw='CONTRACT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOntoCTypeAccess().getCONTRACTKeyword_4());
		}
	)
;

// Entry rule entryRuleContract
entryRuleContract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContractRule()); }
	iv_ruleContract=ruleContract
	{ $current=$iv_ruleContract.current; }
	EOF;

// Rule Contract
ruleContract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Contract'
		{
			newLeafNode(otherlv_0, grammarAccess.getContractAccess().getContractKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContractRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getContractAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContractAccess().getParametersParamParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContractRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"symboleoide.Symboleoide.Param");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getContractAccess().getCommaKeyword_3_1());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getParametersParamParserRuleCall_4_0());
				}
				lv_parameters_5_0=ruleParam
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"symboleoide.Symboleoide.Param");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getContractAccess().getRightParenthesisKeyword_5());
		}
		(
			otherlv_7='Declarations'
			{
				newLeafNode(otherlv_7, grammarAccess.getContractAccess().getDeclarationsKeyword_6_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContractAccess().getDeclarationsDeclarParserRuleCall_6_1_0_0());
						}
						lv_declarations_8_0=ruleDeclar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContractRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_8_0,
								"symboleoide.Symboleoide.Declar");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getContractAccess().getSemicolonKeyword_6_1_1());
				}
			)*
		)?
		(
			otherlv_10='Preconditions'
			{
				newLeafNode(otherlv_10, grammarAccess.getContractAccess().getPreconditionsKeyword_7_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContractAccess().getPropositionsPropParserRuleCall_7_1_0_0());
						}
						lv_propositions_11_0=ruleProp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContractRule());
							}
							add(
								$current,
								"propositions",
								lv_propositions_11_0,
								"symboleoide.Symboleoide.Prop");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=';'
				{
					newLeafNode(otherlv_12, grammarAccess.getContractAccess().getSemicolonKeyword_7_1_1());
				}
			)*
		)?
		(
			otherlv_13='Postconditions'
			{
				newLeafNode(otherlv_13, grammarAccess.getContractAccess().getPostconditionsKeyword_8_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContractAccess().getPropositionsPropParserRuleCall_8_1_0_0());
						}
						lv_propositions_14_0=ruleProp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContractRule());
							}
							add(
								$current,
								"propositions",
								lv_propositions_14_0,
								"symboleoide.Symboleoide.Prop");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_15=';'
				{
					newLeafNode(otherlv_15, grammarAccess.getContractAccess().getSemicolonKeyword_8_1_1());
				}
			)*
		)?
		otherlv_16='Obligations'
		{
			newLeafNode(otherlv_16, grammarAccess.getContractAccess().getObligationsKeyword_9());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContractAccess().getObligationsOblParserRuleCall_10_0_0());
					}
					lv_obligations_17_0=ruleObl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContractRule());
						}
						add(
							$current,
							"obligations",
							lv_obligations_17_0,
							"symboleoide.Symboleoide.Obl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18=';'
			{
				newLeafNode(otherlv_18, grammarAccess.getContractAccess().getSemicolonKeyword_10_1());
			}
		)+
		(
			otherlv_19='SurvivingObls'
			{
				newLeafNode(otherlv_19, grammarAccess.getContractAccess().getSurvivingOblsKeyword_11_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContractAccess().getObligationsOblParserRuleCall_11_1_0_0());
						}
						lv_obligations_20_0=ruleObl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContractRule());
							}
							add(
								$current,
								"obligations",
								lv_obligations_20_0,
								"symboleoide.Symboleoide.Obl");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_21=';'
				{
					newLeafNode(otherlv_21, grammarAccess.getContractAccess().getSemicolonKeyword_11_1_1());
				}
			)*
		)?
		(
			otherlv_22='Powers'
			{
				newLeafNode(otherlv_22, grammarAccess.getContractAccess().getPowersKeyword_12_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContractAccess().getPowersPowParserRuleCall_12_1_0_0());
						}
						lv_powers_23_0=rulePow
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContractRule());
							}
							add(
								$current,
								"powers",
								lv_powers_23_0,
								"symboleoide.Symboleoide.Pow");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_24=';'
				{
					newLeafNode(otherlv_24, grammarAccess.getContractAccess().getSemicolonKeyword_12_1_1());
				}
			)*
		)?
		(
			otherlv_25='Constraints'
			{
				newLeafNode(otherlv_25, grammarAccess.getContractAccess().getConstraintsKeyword_13_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContractAccess().getPropositionsPropParserRuleCall_13_1_0_0());
						}
						lv_propositions_26_0=ruleProp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContractRule());
							}
							add(
								$current,
								"propositions",
								lv_propositions_26_0,
								"symboleoide.Symboleoide.Prop");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_27=';'
				{
					newLeafNode(otherlv_27, grammarAccess.getContractAccess().getSemicolonKeyword_13_1_1());
				}
			)*
		)?
		otherlv_28='endContract'
		{
			newLeafNode(otherlv_28, grammarAccess.getContractAccess().getEndContractKeyword_14());
		}
	)
;

// Entry rule entryRuleAtt
entryRuleAtt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttRule()); }
	iv_ruleAtt=ruleAtt
	{ $current=$iv_ruleAtt.current; }
	EOF;

// Rule Att
ruleAtt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getAttAccess().getPairParserRuleCall());
	}
	this_Pair_0=rulePair
	{
		$current = $this_Pair_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	iv_ruleParam=ruleParam
	{ $current=$iv_ruleParam.current; }
	EOF;

// Rule Param
ruleParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getParamAccess().getDeclarPairParserRuleCall());
	}
	this_DeclarPair_0=ruleDeclarPair
	{
		$current = $this_DeclarPair_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDeclar
entryRuleDeclar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarRule()); }
	iv_ruleDeclar=ruleDeclar
	{ $current=$iv_ruleDeclar.current; }
	EOF;

// Rule Declar
ruleDeclar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarAccess().getDeclarPairParserRuleCall_0());
		}
		this_DeclarPair_0=ruleDeclarPair
		{
			$current = $this_DeclarPair_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1='with'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarAccess().getWithKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarAccess().getNamesNameParserRuleCall_2_0_0());
					}
					lv_names_2_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarRule());
						}
						add(
							$current,
							"names",
							lv_names_2_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=':='
			{
				newLeafNode(otherlv_3, grammarAccess.getDeclarAccess().getColonEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarAccess().getNamesNameParserRuleCall_2_2_0());
					}
					lv_names_4_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarRule());
						}
						add(
							$current,
							"names",
							lv_names_4_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDeclarAccess().getCommaKeyword_2_3());
			}
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarAccess().getNamesNameParserRuleCall_3_0_0());
					}
					lv_names_6_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarRule());
						}
						add(
							$current,
							"names",
							lv_names_6_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=':='
			{
				newLeafNode(otherlv_7, grammarAccess.getDeclarAccess().getColonEqualsSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarAccess().getNamesNameParserRuleCall_3_2_0());
					}
					lv_names_8_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarRule());
						}
						add(
							$current,
							"names",
							lv_names_8_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDeclarPair
entryRuleDeclarPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarPairRule()); }
	iv_ruleDeclarPair=ruleDeclarPair
	{ $current=$iv_ruleDeclarPair.current; }
	EOF;

// Rule DeclarPair
ruleDeclarPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeclarPairAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarPairRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarPairAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarPairAccess().getTypeNamesTypeNameParserRuleCall_2_0());
				}
				lv_typeNames_2_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarPairRule());
					}
					add(
						$current,
						"typeNames",
						lv_typeNames_2_0,
						"symboleoide.Symboleoide.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePair
entryRulePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPairRule()); }
	iv_rulePair=rulePair
	{ $current=$iv_rulePair.current; }
	EOF;

// Rule Pair
rulePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPairAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPairRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPairAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPairAccess().getTypesCTypeParserRuleCall_2_0());
				}
				lv_types_2_0=ruleCType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPairRule());
					}
					add(
						$current,
						"types",
						lv_types_2_0,
						"symboleoide.Symboleoide.CType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeName
entryRuleTypeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruleTypeName=ruleTypeName
	{ $current=$iv_ruleTypeName.current; }
	EOF;

// Rule TypeName
ruleTypeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTypeNameAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeNameAccess().getTypeNameAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getTypeNameAccess().getBasicTypeParserRuleCall_1_1());
			}
			ruleBasicType
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleObl
entryRuleObl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOblRule()); }
	iv_ruleObl=ruleObl
	{ $current=$iv_ruleObl.current; }
	EOF;

// Rule Obl
ruleObl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getOblAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOblRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getOblAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOblAccess().getTriggerPropParserRuleCall_2_0_0());
					}
					lv_trigger_2_0=ruleProp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOblRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_2_0,
							"symboleoide.Symboleoide.Prop");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='->'
			{
				newLeafNode(otherlv_3, grammarAccess.getOblAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
			}
		)?
		otherlv_4='O'
		{
			newLeafNode(otherlv_4, grammarAccess.getOblAccess().getOKeyword_3());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getOblAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOblAccess().getRolesNameParserRuleCall_5_0());
				}
				lv_roles_6_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOblRule());
					}
					add(
						$current,
						"roles",
						lv_roles_6_0,
						"symboleoide.Symboleoide.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getOblAccess().getCommaKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOblAccess().getRolesNameParserRuleCall_7_0());
				}
				lv_roles_8_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOblRule());
					}
					add(
						$current,
						"roles",
						lv_roles_8_0,
						"symboleoide.Symboleoide.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getOblAccess().getCommaKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOblAccess().getAntecedentPropParserRuleCall_9_0());
				}
				lv_antecedent_10_0=ruleProp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOblRule());
					}
					set(
						$current,
						"antecedent",
						lv_antecedent_10_0,
						"symboleoide.Symboleoide.Prop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getOblAccess().getCommaKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOblAccess().getConsequentPropParserRuleCall_11_0());
				}
				lv_consequent_12_0=ruleProp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOblRule());
					}
					set(
						$current,
						"consequent",
						lv_consequent_12_0,
						"symboleoide.Symboleoide.Prop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getOblAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRuleProp
entryRuleProp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropRule()); }
	iv_ruleProp=ruleProp
	{ $current=$iv_ruleProp.current; }
	EOF;

// Rule Prop
ruleProp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropAccess().getJunctionsJuncParserRuleCall_0_0());
				}
				lv_junctions_0_0=ruleJunc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropRule());
					}
					add(
						$current,
						"junctions",
						lv_junctions_0_0,
						"symboleoide.Symboleoide.Junc");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='OR'
			{
				newLeafNode(otherlv_1, grammarAccess.getPropAccess().getORKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropAccess().getJunctionsJuncParserRuleCall_1_1_0());
					}
					lv_junctions_2_0=ruleJunc
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropRule());
						}
						add(
							$current,
							"junctions",
							lv_junctions_2_0,
							"symboleoide.Symboleoide.Junc");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleJunc
entryRuleJunc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJuncRule()); }
	iv_ruleJunc=ruleJunc
	{ $current=$iv_ruleJunc.current; }
	EOF;

// Rule Junc
ruleJunc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJuncAccess().getNegativeAtomsNegParserRuleCall_0_0());
				}
				lv_negativeAtoms_0_0=ruleNeg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJuncRule());
					}
					add(
						$current,
						"negativeAtoms",
						lv_negativeAtoms_0_0,
						"symboleoide.Symboleoide.Neg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='AND'
			{
				newLeafNode(otherlv_1, grammarAccess.getJuncAccess().getANDKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJuncAccess().getNegativeAtomsNegParserRuleCall_1_1_0());
					}
					lv_negativeAtoms_2_0=ruleNeg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJuncRule());
						}
						add(
							$current,
							"negativeAtoms",
							lv_negativeAtoms_2_0,
							"symboleoide.Symboleoide.Neg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNeg
entryRuleNeg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegRule()); }
	iv_ruleNeg=ruleNeg
	{ $current=$iv_ruleNeg.current; }
	EOF;

// Rule Neg
ruleNeg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='NOT'
			{
				newLeafNode(otherlv_0, grammarAccess.getNegAccess().getNOTKeyword_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNegAccess().getAtomicExpressionsAtomParserRuleCall_1_0());
				}
				lv_atomicExpressions_1_0=ruleAtom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNegRule());
					}
					add(
						$current,
						"atomicExpressions",
						lv_atomicExpressions_1_0,
						"symboleoide.Symboleoide.Atom");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	iv_ruleAtom=ruleAtom
	{ $current=$iv_ruleAtom.current; }
	EOF;

// Rule Atom
ruleAtom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomAccess().getEventPropositionsEventPropParserRuleCall_0_0());
				}
				lv_eventPropositions_0_0=ruleEventProp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomRule());
					}
					add(
						$current,
						"eventPropositions",
						lv_eventPropositions_0_0,
						"symboleoide.Symboleoide.EventProp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomAccess().getSituationPropositionsSitPropParserRuleCall_1_0());
				}
				lv_situationPropositions_1_0=ruleSitProp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomRule());
					}
					add(
						$current,
						"situationPropositions",
						lv_situationPropositions_1_0,
						"symboleoide.Symboleoide.SitProp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getShortHandNamesNameParserRuleCall_2_0_0());
					}
					lv_shortHandNames_2_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"shortHandNames",
							lv_shortHandNames_2_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomAccess().getNamesNameParserRuleCall_2_2_0_0());
						}
						lv_names_4_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomRule());
							}
							add(
								$current,
								"names",
								lv_names_4_0,
								"symboleoide.Symboleoide.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getAtomAccess().getCommaKeyword_2_2_1());
				}
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getNamesNameParserRuleCall_2_3_0());
					}
					lv_names_6_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"names",
							lv_names_6_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getAtomAccess().getCommaKeyword_2_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomAccess().getPointsPointParserRuleCall_2_4_1_0());
						}
						lv_points_8_0=rulePoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomRule());
							}
							add(
								$current,
								"points",
								lv_points_8_0,
								"symboleoide.Symboleoide.Point");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getAtomAccess().getCommaKeyword_2_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomAccess().getIntervalsIntervalParserRuleCall_2_5_1_0());
						}
						lv_intervals_10_0=ruleInterval
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomRule());
							}
							add(
								$current,
								"intervals",
								lv_intervals_10_0,
								"symboleoide.Symboleoide.Interval");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getAtomAccess().getRightParenthesisKeyword_2_6());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getPointsPointParserRuleCall_3_0_0());
					}
					lv_points_12_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"points",
							lv_points_12_0,
							"symboleoide.Symboleoide.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='within'
			{
				newLeafNode(otherlv_13, grammarAccess.getAtomAccess().getWithinKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getIntervalsIntervalParserRuleCall_3_2_0());
					}
					lv_intervals_14_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"intervals",
							lv_intervals_14_0,
							"symboleoide.Symboleoide.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_15='('
			{
				newLeafNode(otherlv_15, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getPropositionsPropParserRuleCall_4_1_0());
					}
					lv_propositions_16_0=ruleProp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"propositions",
							lv_propositions_16_0,
							"symboleoide.Symboleoide.Prop");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getAtomAccess().getRightParenthesisKeyword_4_2());
			}
		)
		    |
		(
			otherlv_18='exists'
			{
				newLeafNode(otherlv_18, grammarAccess.getAtomAccess().getExistsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getVarNameNameParserRuleCall_5_1_0());
					}
					lv_varName_19_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"varName",
							lv_varName_19_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_20='|'
			{
				newLeafNode(otherlv_20, grammarAccess.getAtomAccess().getVerticalLineKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getSetExpsSetExpParserRuleCall_5_3_0());
					}
					lv_setExps_21_0=ruleSetExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"setExps",
							lv_setExps_21_0,
							"symboleoide.Symboleoide.SetExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_5_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getMetaconstraintsMetaConstParserRuleCall_5_5_0());
					}
					lv_metaconstraints_23_0=ruleMetaConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"metaconstraints",
							lv_metaconstraints_23_0,
							"symboleoide.Symboleoide.MetaConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_24=')'
			{
				newLeafNode(otherlv_24, grammarAccess.getAtomAccess().getRightParenthesisKeyword_5_6());
			}
		)
		    |
		(
			otherlv_25='forAll'
			{
				newLeafNode(otherlv_25, grammarAccess.getAtomAccess().getForAllKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getVarNameNameParserRuleCall_6_1_0());
					}
					lv_varName_26_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"varName",
							lv_varName_26_0,
							"symboleoide.Symboleoide.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_27='|'
			{
				newLeafNode(otherlv_27, grammarAccess.getAtomAccess().getVerticalLineKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getSetExpsSetExpParserRuleCall_6_3_0());
					}
					lv_setExps_28_0=ruleSetExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"setExps",
							lv_setExps_28_0,
							"symboleoide.Symboleoide.SetExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_29='('
			{
				newLeafNode(otherlv_29, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_6_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getMetaconstraintsMetaConstParserRuleCall_6_5_0());
					}
					lv_metaconstraints_30_0=ruleMetaConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						add(
							$current,
							"metaconstraints",
							lv_metaconstraints_30_0,
							"symboleoide.Symboleoide.MetaConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_31=')'
			{
				newLeafNode(otherlv_31, grammarAccess.getAtomAccess().getRightParenthesisKeyword_6_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getAtomAction_7_0(),
						$current);
				}
			)
			otherlv_33='TRUE'
			{
				newLeafNode(otherlv_33, grammarAccess.getAtomAccess().getTRUEKeyword_7_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getAtomAction_8_0(),
						$current);
				}
			)
			otherlv_35='FALSE'
			{
				newLeafNode(otherlv_35, grammarAccess.getAtomAccess().getFALSEKeyword_8_1());
			}
		)
	)
;

// Entry rule entryRuleSitProp
entryRuleSitProp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSitPropRule()); }
	iv_ruleSitProp=ruleSitProp
	{ $current=$iv_ruleSitProp.current; }
	EOF;

// Rule SitProp
ruleSitProp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='occurs'
			{
				newLeafNode(otherlv_0, grammarAccess.getSitPropAccess().getOccursKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getSitPropAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSitPropRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getSitPropAccess().getSituationNameNameCrossReference_0_2_0());
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSitPropAccess().getCommaKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getIntervalsIntervalParserRuleCall_0_4_0());
					}
					lv_intervals_4_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						add(
							$current,
							"intervals",
							lv_intervals_4_0,
							"symboleoide.Symboleoide.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getSitPropAccess().getRightParenthesisKeyword_0_5());
			}
		)
		    |
		(
			otherlv_6='occurs'
			{
				newLeafNode(otherlv_6, grammarAccess.getSitPropAccess().getOccursKeyword_1_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getSitPropAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getOSituationNameOStateParserRuleCall_1_2_0());
					}
					lv_oSituationName_8_0=ruleoState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						set(
							$current,
							"oSituationName",
							lv_oSituationName_8_0,
							"symboleoide.Symboleoide.oState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getSitPropAccess().getCommaKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getIntervalsIntervalParserRuleCall_1_4_0());
					}
					lv_intervals_10_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						add(
							$current,
							"intervals",
							lv_intervals_10_0,
							"symboleoide.Symboleoide.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getSitPropAccess().getRightParenthesisKeyword_1_5());
			}
		)
		    |
		(
			otherlv_12='occurs'
			{
				newLeafNode(otherlv_12, grammarAccess.getSitPropAccess().getOccursKeyword_2_0());
			}
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getSitPropAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getCSituationNameCStateParserRuleCall_2_2_0());
					}
					lv_cSituationName_14_0=rulecState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						set(
							$current,
							"cSituationName",
							lv_cSituationName_14_0,
							"symboleoide.Symboleoide.cState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getSitPropAccess().getCommaKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getIntervalsIntervalParserRuleCall_2_4_0());
					}
					lv_intervals_16_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						add(
							$current,
							"intervals",
							lv_intervals_16_0,
							"symboleoide.Symboleoide.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getSitPropAccess().getRightParenthesisKeyword_2_5());
			}
		)
		    |
		(
			otherlv_18='occurs'
			{
				newLeafNode(otherlv_18, grammarAccess.getSitPropAccess().getOccursKeyword_3_0());
			}
			otherlv_19='('
			{
				newLeafNode(otherlv_19, grammarAccess.getSitPropAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getPSituationNamePStateParserRuleCall_3_2_0());
					}
					lv_pSituationName_20_0=rulepState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						set(
							$current,
							"pSituationName",
							lv_pSituationName_20_0,
							"symboleoide.Symboleoide.pState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_21=','
			{
				newLeafNode(otherlv_21, grammarAccess.getSitPropAccess().getCommaKeyword_3_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getIntervalsIntervalParserRuleCall_3_4_0());
					}
					lv_intervals_22_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						add(
							$current,
							"intervals",
							lv_intervals_22_0,
							"symboleoide.Symboleoide.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_23=')'
			{
				newLeafNode(otherlv_23, grammarAccess.getSitPropAccess().getRightParenthesisKeyword_3_5());
			}
		)
	)
;

// Entry rule entryRuleEventProp
entryRuleEventProp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventPropRule()); }
	iv_ruleEventProp=ruleEventProp
	{ $current=$iv_ruleEventProp.current; }
	EOF;

// Rule EventProp
ruleEventProp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='happens'
			{
				newLeafNode(otherlv_0, grammarAccess.getEventPropAccess().getHappensKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEventPropAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventPropRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getEventPropAccess().getEventNameDeclarCrossReference_0_2_0());
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getEventPropAccess().getCommaKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getPointsPointParserRuleCall_0_4_0());
					}
					lv_points_4_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						add(
							$current,
							"points",
							lv_points_4_0,
							"symboleoide.Symboleoide.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getEventPropAccess().getRightParenthesisKeyword_0_5());
			}
		)
		    |
		(
			otherlv_6='happens'
			{
				newLeafNode(otherlv_6, grammarAccess.getEventPropAccess().getHappensKeyword_1_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getEventPropAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getOEventNameOEventParserRuleCall_1_2_0());
					}
					lv_oEventName_8_0=ruleoEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						set(
							$current,
							"oEventName",
							lv_oEventName_8_0,
							"symboleoide.Symboleoide.oEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getEventPropAccess().getCommaKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getPointsPointParserRuleCall_1_4_0());
					}
					lv_points_10_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						add(
							$current,
							"points",
							lv_points_10_0,
							"symboleoide.Symboleoide.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getEventPropAccess().getRightParenthesisKeyword_1_5());
			}
		)
		    |
		(
			otherlv_12='happens'
			{
				newLeafNode(otherlv_12, grammarAccess.getEventPropAccess().getHappensKeyword_2_0());
			}
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getEventPropAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getCEventNameCEventParserRuleCall_2_2_0());
					}
					lv_cEventName_14_0=rulecEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						set(
							$current,
							"cEventName",
							lv_cEventName_14_0,
							"symboleoide.Symboleoide.cEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getEventPropAccess().getCommaKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getPointsPointParserRuleCall_2_4_0());
					}
					lv_points_16_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						add(
							$current,
							"points",
							lv_points_16_0,
							"symboleoide.Symboleoide.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getEventPropAccess().getRightParenthesisKeyword_2_5());
			}
		)
		    |
		(
			otherlv_18='happens'
			{
				newLeafNode(otherlv_18, grammarAccess.getEventPropAccess().getHappensKeyword_3_0());
			}
			otherlv_19='('
			{
				newLeafNode(otherlv_19, grammarAccess.getEventPropAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getPEventNamePEventParserRuleCall_3_2_0());
					}
					lv_pEventName_20_0=rulepEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						set(
							$current,
							"pEventName",
							lv_pEventName_20_0,
							"symboleoide.Symboleoide.pEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_21=','
			{
				newLeafNode(otherlv_21, grammarAccess.getEventPropAccess().getCommaKeyword_3_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getPointsPointParserRuleCall_3_4_0());
					}
					lv_points_22_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						add(
							$current,
							"points",
							lv_points_22_0,
							"symboleoide.Symboleoide.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_23=')'
			{
				newLeafNode(otherlv_23, grammarAccess.getEventPropAccess().getRightParenthesisKeyword_3_5());
			}
		)
	)
;

// Entry rule entryRuleMetaConst
entryRuleMetaConst returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMetaConstRule()); }
	iv_ruleMetaConst=ruleMetaConst
	{ $current=$iv_ruleMetaConst.current.getText(); }
	EOF;

// Rule MetaConst
ruleMetaConst returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='CannotBeAssigned'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getMetaConstAccess().getCannotBeAssignedKeyword());
	}
;

// Entry rule entryRuleInterval
entryRuleInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntervalRule()); }
	iv_ruleInterval=ruleInterval
	{ $current=$iv_ruleInterval.current; }
	EOF;

// Rule Interval
ruleInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntervalAccess().getSituationNameSitNameParserRuleCall_0_0());
				}
				lv_situationName_0_0=ruleSitName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntervalRule());
					}
					set(
						$current,
						"situationName",
						lv_situationName_0_0,
						"symboleoide.Symboleoide.SitName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getPointsPointParserRuleCall_1_1_0());
					}
					lv_points_2_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"points",
							lv_points_2_0,
							"symboleoide.Symboleoide.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getIntervalAccess().getCommaKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getPointsPointParserRuleCall_1_3_0());
					}
					lv_points_4_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"points",
							lv_points_4_0,
							"symboleoide.Symboleoide.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_1_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getIntervalAccess().getIntervalAction_2_0(),
						$current);
				}
			)
			otherlv_7='UNNAMED_INTERVAL'
			{
				newLeafNode(otherlv_7, grammarAccess.getIntervalAccess().getUNNAMED_INTERVALKeyword_2_1());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getSituationNamesSitNameParserRuleCall_3_0_0());
					}
					lv_situationNames_8_0=ruleSitName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"situationNames",
							lv_situationNames_8_0,
							"symboleoide.Symboleoide.SitName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getTempOpsTempOpParserRuleCall_3_1_0());
					}
					lv_tempOps_9_0=ruleTempOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"tempOps",
							lv_tempOps_9_0,
							"symboleoide.Symboleoide.TempOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getIntConstsIntConstParserRuleCall_3_2_0());
					}
					lv_intConsts_10_0=ruleIntConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"intConsts",
							lv_intConsts_10_0,
							"symboleoide.Symboleoide.IntConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getUnitsUnitParserRuleCall_3_3_0());
					}
					lv_units_11_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"units",
							lv_units_11_0,
							"symboleoide.Symboleoide.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getIntConstsIntConstParserRuleCall_4_0_0());
					}
					lv_intConsts_12_0=ruleIntConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"intConsts",
							lv_intConsts_12_0,
							"symboleoide.Symboleoide.IntConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getUnitsUnitParserRuleCall_4_1_0());
					}
					lv_units_13_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"units",
							lv_units_13_0,
							"symboleoide.Symboleoide.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getTempOpsTempOpParserRuleCall_4_2_0());
					}
					lv_tempOps_14_0=ruleTempOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"tempOps",
							lv_tempOps_14_0,
							"symboleoide.Symboleoide.TempOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getSituationNamesSitNameParserRuleCall_4_3_0());
					}
					lv_situationNames_15_0=ruleSitName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						add(
							$current,
							"situationNames",
							lv_situationNames_15_0,
							"symboleoide.Symboleoide.SitName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSitName
entryRuleSitName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSitNameRule()); }
	iv_ruleSitName=ruleSitName
	{ $current=$iv_ruleSitName.current; }
	EOF;

// Rule SitName
ruleSitName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getSitNameNameParserRuleCall_0_0());
				}
				lv_SitName_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					add(
						$current,
						"SitName",
						lv_SitName_0_0,
						"symboleoide.Symboleoide.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getOStatesOStateParserRuleCall_1_0());
				}
				lv_oStates_1_0=ruleoState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					add(
						$current,
						"oStates",
						lv_oStates_1_0,
						"symboleoide.Symboleoide.oState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getPStatesPStateParserRuleCall_2_0());
				}
				lv_pStates_2_0=rulepState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					add(
						$current,
						"pStates",
						lv_pStates_2_0,
						"symboleoide.Symboleoide.pState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getCStatesCStateParserRuleCall_3_0());
				}
				lv_cStates_3_0=rulecState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					add(
						$current,
						"cStates",
						lv_cStates_3_0,
						"symboleoide.Symboleoide.cState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getOEventsOEventParserRuleCall_4_0());
				}
				lv_oEvents_4_0=ruleoEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					add(
						$current,
						"oEvents",
						lv_oEvents_4_0,
						"symboleoide.Symboleoide.oEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getCEventsCEventParserRuleCall_5_0());
				}
				lv_cEvents_5_0=rulecEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					add(
						$current,
						"cEvents",
						lv_cEvents_5_0,
						"symboleoide.Symboleoide.cEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getPEventsPEventParserRuleCall_6_0());
				}
				lv_pEvents_6_0=rulepEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					add(
						$current,
						"pEvents",
						lv_pEvents_6_0,
						"symboleoide.Symboleoide.pEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current.getText(); }
	EOF;

// Rule Unit
ruleUnit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='SECONDS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getSECONDSKeyword_0());
		}
		    |
		kw='MINUTES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getMINUTESKeyword_1());
		}
		    |
		kw='HOURS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getHOURSKeyword_2());
		}
		    |
		kw='DAYS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getDAYSKeyword_3());
		}
		    |
		kw='WEEKS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getWEEKSKeyword_4());
		}
		    |
		kw='MONTHS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getMONTHSKeyword_5());
		}
		    |
		kw='QUARTERS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getQUARTERSKeyword_6());
		}
		    |
		kw='YEARS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getYEARSKeyword_7());
		}
	)
;

// Entry rule entryRuleIntConst
entryRuleIntConst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntConstRule()); }
	iv_ruleIntConst=ruleIntConst
	{ $current=$iv_ruleIntConst.current; }
	EOF;

// Rule IntConst
ruleIntConst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntConstAccess().getIntConstAction_0(),
					$current);
			}
		)
		(
			(
				lv_Type_1_0=RULE_INT
				{
					newLeafNode(lv_Type_1_0, grammarAccess.getIntConstAccess().getTypeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntConstRule());
					}
					setWithLastConsumed(
						$current,
						"Type",
						lv_Type_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleTempOp
entryRuleTempOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTempOpRule()); }
	iv_ruleTempOp=ruleTempOp
	{ $current=$iv_ruleTempOp.current.getText(); }
	EOF;

// Rule TempOp
ruleTempOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BEFORE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getBEFOREKeyword_0());
		}
		    |
		kw='AFTER'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getAFTERKeyword_1());
		}
		    |
		kw='AT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getATKeyword_2());
		}
		    |
		kw='WITHIN'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getWITHINKeyword_3());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getPlusSignKeyword_4());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getHyphenMinusKeyword_5());
		}
	)
;

// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	iv_rulePoint=rulePoint
	{ $current=$iv_rulePoint.current; }
	EOF;

// Rule Point
rulePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getEventNamesSitNameParserRuleCall_0_0());
				}
				lv_eventNames_0_0=ruleSitName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					add(
						$current,
						"eventNames",
						lv_eventNames_0_0,
						"symboleoide.Symboleoide.SitName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPointAccess().getPointAction_1_0(),
						$current);
				}
			)
			otherlv_2='UNNAMED_POINT'
			{
				newLeafNode(otherlv_2, grammarAccess.getPointAccess().getUNNAMED_POINTKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getPointConstsPointConstParserRuleCall_2_0());
				}
				lv_pointConsts_3_0=rulePointConst
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					add(
						$current,
						"pointConsts",
						lv_pointConsts_3_0,
						"symboleoide.Symboleoide.PointConst");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getPointConstsPointConstParserRuleCall_3_0_0());
					}
					lv_pointConsts_4_0=rulePointConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"pointConsts",
							lv_pointConsts_4_0,
							"symboleoide.Symboleoide.PointConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getUnitsUnitParserRuleCall_3_1_0());
					}
					lv_units_5_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"units",
							lv_units_5_0,
							"symboleoide.Symboleoide.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getTempOpsTempOpParserRuleCall_3_2_0());
					}
					lv_tempOps_6_0=ruleTempOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"tempOps",
							lv_tempOps_6_0,
							"symboleoide.Symboleoide.TempOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getEventNamesSitNameParserRuleCall_3_3_0());
					}
					lv_eventNames_7_0=ruleSitName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"eventNames",
							lv_eventNames_7_0,
							"symboleoide.Symboleoide.SitName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getEventNamesSitNameParserRuleCall_4_0_0());
					}
					lv_eventNames_8_0=ruleSitName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"eventNames",
							lv_eventNames_8_0,
							"symboleoide.Symboleoide.SitName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getTempOpsTempOpParserRuleCall_4_1_0());
					}
					lv_tempOps_9_0=ruleTempOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"tempOps",
							lv_tempOps_9_0,
							"symboleoide.Symboleoide.TempOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getPointConstsPointConstParserRuleCall_4_2_0());
					}
					lv_pointConsts_10_0=rulePointConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"pointConsts",
							lv_pointConsts_10_0,
							"symboleoide.Symboleoide.PointConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getUnitsUnitParserRuleCall_4_3_0());
					}
					lv_units_11_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						add(
							$current,
							"units",
							lv_units_11_0,
							"symboleoide.Symboleoide.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleName
entryRuleName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current; }
	EOF;

// Rule Name
ruleName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRulepEvent
entryRulepEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPEventRule()); }
	iv_rulepEvent=rulepEvent
	{ $current=$iv_rulepEvent.current; }
	EOF;

// Rule pEvent
rulepEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPEventAccess().getPowEventPowEventParserRuleCall_0_0());
				}
				lv_powEvent_0_0=rulePowEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPEventRule());
					}
					set(
						$current,
						"powEvent",
						lv_powEvent_0_0,
						"symboleoide.Symboleoide.PowEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPEventAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPEventRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getPEventAccess().getPowNamePowCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPEventAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePowEvent
entryRulePowEvent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPowEventRule()); }
	iv_rulePowEvent=rulePowEvent
	{ $current=$iv_rulePowEvent.current.getText(); }
	EOF;

// Rule PowEvent
rulePowEvent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='pTRIGGERED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPTRIGGEREDKeyword_0());
		}
		    |
		kw='pACTIVATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPACTIVATEDKeyword_1());
		}
		    |
		kw='pSUSPENDED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPSUSPENDEDKeyword_2());
		}
		    |
		kw='pRESUMED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPRESUMEDKeyword_3());
		}
		    |
		kw='pEXERTED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPEXERTEDKeyword_4());
		}
		    |
		kw='pEXPIRED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPEXPIREDKeyword_5());
		}
		    |
		kw='pTERMINATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPTERMINATEDKeyword_6());
		}
	)
;

// Entry rule entryRulecEvent
entryRulecEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCEventRule()); }
	iv_rulecEvent=rulecEvent
	{ $current=$iv_rulecEvent.current; }
	EOF;

// Rule cEvent
rulecEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCEventAccess().getContrEventContrEventParserRuleCall_0_0());
				}
				lv_contrEvent_0_0=ruleContrEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCEventRule());
					}
					set(
						$current,
						"contrEvent",
						lv_contrEvent_0_0,
						"symboleoide.Symboleoide.ContrEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCEventAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCEventRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getCEventAccess().getContrNameContractCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCEventAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleContrEvent
entryRuleContrEvent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContrEventRule()); }
	iv_ruleContrEvent=ruleContrEvent
	{ $current=$iv_ruleContrEvent.current.getText(); }
	EOF;

// Rule ContrEvent
ruleContrEvent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='cACTIVATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCACTIVATEDKeyword_0());
		}
		    |
		kw='cSUSPENDED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCSUSPENDEDKeyword_1());
		}
		    |
		kw='cRESUMED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCRESUMEDKeyword_2());
		}
		    |
		kw='cFULFILLED_ACTIVE_OBLS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCFULFILLED_ACTIVE_OBLSKeyword_3());
		}
		    |
		kw='cREVOKED_PARTY'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCREVOKED_PARTYKeyword_4());
		}
		    |
		kw='cASSIGNED_PARTY'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCASSIGNED_PARTYKeyword_5());
		}
		    |
		kw='cTERMINATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCTERMINATEDKeyword_6());
		}
	)
;

// Entry rule entryRuleoEvent
entryRuleoEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOEventRule()); }
	iv_ruleoEvent=ruleoEvent
	{ $current=$iv_ruleoEvent.current; }
	EOF;

// Rule oEvent
ruleoEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOEventAccess().getOblEventOblEventParserRuleCall_0_0());
				}
				lv_oblEvent_0_0=ruleOblEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOEventRule());
					}
					set(
						$current,
						"oblEvent",
						lv_oblEvent_0_0,
						"symboleoide.Symboleoide.OblEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOEventAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOEventRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getOEventAccess().getOblNameOblCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getOEventAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOblEvent
entryRuleOblEvent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOblEventRule()); }
	iv_ruleOblEvent=ruleOblEvent
	{ $current=$iv_ruleOblEvent.current.getText(); }
	EOF;

// Rule OblEvent
ruleOblEvent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='oTRIGGERED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOTRIGGEREDKeyword_0());
		}
		    |
		kw='oACTIVATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOACTIVATEDKeyword_1());
		}
		    |
		kw='oSUSPENDED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOSUSPENDEDKeyword_2());
		}
		    |
		kw='oRESUMED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getORESUMEDKeyword_3());
		}
		    |
		kw='oDISCHARGED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getODISCHARGEDKeyword_4());
		}
		    |
		kw='oEXPIRED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOEXPIREDKeyword_5());
		}
		    |
		kw='oFULFILLED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOFULFILLEDKeyword_6());
		}
		    |
		kw='oVIOLATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOVIOLATEDKeyword_7());
		}
		    |
		kw='oTERMINATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOTERMINATEDKeyword_8());
		}
	)
;

// Entry rule entryRulePointConst
entryRulePointConst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointConstRule()); }
	iv_rulePointConst=rulePointConst
	{ $current=$iv_rulePointConst.current; }
	EOF;

// Rule PointConst
rulePointConst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPointConstAccess().getPointConstAction_0(),
					$current);
			}
		)
		(
			(
				lv_Type_1_0=RULE_INT
				{
					newLeafNode(lv_Type_1_0, grammarAccess.getPointConstAccess().getTypeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointConstRule());
					}
					setWithLastConsumed(
						$current,
						"Type",
						lv_Type_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleoState
entryRuleoState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOStateRule()); }
	iv_ruleoState=ruleoState
	{ $current=$iv_ruleoState.current; }
	EOF;

// Rule oState
ruleoState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOStateAccess().getOblStateOblStateParserRuleCall_0_0());
				}
				lv_oblState_0_0=ruleOblState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOStateRule());
					}
					set(
						$current,
						"oblState",
						lv_oblState_0_0,
						"symboleoide.Symboleoide.OblState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOStateAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getOStateAccess().getOblNameOblCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getOStateAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOblState
entryRuleOblState returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOblStateRule()); }
	iv_ruleOblState=ruleOblState
	{ $current=$iv_ruleOblState.current.getText(); }
	EOF;

// Rule OblState
ruleOblState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='oCREATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOCREATEKeyword_0());
		}
		    |
		kw='oINEFFECT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOINEFFECTKeyword_1());
		}
		    |
		kw='oSUSPENSION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOSUSPENSIONKeyword_2());
		}
		    |
		kw='oSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOSUCCESSFUL_TERMINATIONKeyword_3());
		}
		    |
		kw='oUNSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOUNSUCCESSFUL_TERMINATIONKeyword_4());
		}
		    |
		kw='oVIOLATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOVIOLATIONKeyword_5());
		}
		    |
		kw='oFULFILLMENT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOFULFILLMENTKeyword_6());
		}
		    |
		kw='oDISCHARGE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getODISCHARGEKeyword_7());
		}
	)
;

// Entry rule entryRulecState
entryRulecState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCStateRule()); }
	iv_rulecState=rulecState
	{ $current=$iv_rulecState.current; }
	EOF;

// Rule cState
rulecState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCStateAccess().getContrStateContrStateParserRuleCall_0_0());
				}
				lv_contrState_0_0=ruleContrState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCStateRule());
					}
					set(
						$current,
						"contrState",
						lv_contrState_0_0,
						"symboleoide.Symboleoide.ContrState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCStateAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getCStateAccess().getContractNameContractCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCStateAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleContrState
entryRuleContrState returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContrStateRule()); }
	iv_ruleContrState=ruleContrState
	{ $current=$iv_ruleContrState.current.getText(); }
	EOF;

// Rule ContrState
ruleContrState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='cFORM'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCFORMKeyword_0());
		}
		    |
		kw='cINEFFECT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCINEFFECTKeyword_1());
		}
		    |
		kw='cSUSPENSION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCSUSPENSIONKeyword_2());
		}
		    |
		kw='cSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCSUCCESSFUL_TERMINATIONKeyword_3());
		}
		    |
		kw='cUNSECCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCUNSECCESSFUL_TERMINATIONKeyword_4());
		}
		    |
		kw='cUNASSIGN'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCUNASSIGNKeyword_5());
		}
	)
;

// Entry rule entryRulePow
entryRulePow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowRule()); }
	iv_rulePow=rulePow
	{ $current=$iv_rulePow.current; }
	EOF;

// Rule Pow
rulePow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPowAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPowAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPowAccess().getTriggerPropParserRuleCall_2_0_0());
					}
					lv_trigger_2_0=ruleProp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_2_0,
							"symboleoide.Symboleoide.Prop");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='->'
			{
				newLeafNode(otherlv_3, grammarAccess.getPowAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
			}
		)?
		otherlv_4='P'
		{
			newLeafNode(otherlv_4, grammarAccess.getPowAccess().getPKeyword_3());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getPowAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPowAccess().getRolesNameParserRuleCall_5_0());
				}
				lv_roles_6_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPowRule());
					}
					add(
						$current,
						"roles",
						lv_roles_6_0,
						"symboleoide.Symboleoide.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getPowAccess().getCommaKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPowAccess().getRolesNameParserRuleCall_7_0());
				}
				lv_roles_8_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPowRule());
					}
					add(
						$current,
						"roles",
						lv_roles_8_0,
						"symboleoide.Symboleoide.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getPowAccess().getCommaKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPowAccess().getAntecedentsPropParserRuleCall_9_0());
				}
				lv_antecedents_10_0=ruleProp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPowRule());
					}
					add(
						$current,
						"antecedents",
						lv_antecedents_10_0,
						"symboleoide.Symboleoide.Prop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getPowAccess().getCommaKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPowAccess().getConsequentsPropParserRuleCall_11_0());
				}
				lv_consequents_12_0=ruleProp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPowRule());
					}
					add(
						$current,
						"consequents",
						lv_consequents_12_0,
						"symboleoide.Symboleoide.Prop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getPowAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRulepState
entryRulepState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPStateRule()); }
	iv_rulepState=rulepState
	{ $current=$iv_rulepState.current; }
	EOF;

// Rule pState
rulepState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPStateAccess().getPowStatePowStateParserRuleCall_0_0());
				}
				lv_powState_0_0=rulePowState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPStateRule());
					}
					set(
						$current,
						"powState",
						lv_powState_0_0,
						"symboleoide.Symboleoide.PowState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPStateAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getPStateAccess().getPowNamePowCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPStateAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePowState
entryRulePowState returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPowStateRule()); }
	iv_rulePowState=rulePowState
	{ $current=$iv_rulePowState.current.getText(); }
	EOF;

// Rule PowState
rulePowState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='pCREATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPCREATEKeyword_0());
		}
		    |
		kw='pINEFFECT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPINEFFECTKeyword_1());
		}
		    |
		kw='pSUSPENSION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPSUSPENSIONKeyword_2());
		}
		    |
		kw='pSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPSUCCESSFUL_TERMINATIONKeyword_3());
		}
		    |
		kw='pUNSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPUNSUCCESSFUL_TERMINATIONKeyword_4());
		}
	)
;

// Entry rule entryRuleSetExp
entryRuleSetExp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSetExpRule()); }
	iv_ruleSetExp=ruleSetExp
	{ $current=$iv_ruleSetExp.current.getText(); }
	EOF;

// Rule SetExp
ruleSetExp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='self.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSetExpAccess().getSelfKeyword_0_0());
			}
			kw='obligation.instance'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSetExpAccess().getObligationInstanceKeyword_0_1());
			}
		)
		    |
		(
			kw='self.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSetExpAccess().getSelfKeyword_1_0());
			}
			kw='power.instance'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSetExpAccess().getPowerInstanceKeyword_1_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
